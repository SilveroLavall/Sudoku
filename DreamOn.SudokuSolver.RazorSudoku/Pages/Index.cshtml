@page
@model DreamOn.SudokuSolver.RazorSudoku.Pages.SudokuModel
@{
    ViewData["Title"] = "Sudoku";
}

<form method="post" id="post-sudoku-puzzle">
</form>

<div class="card">
    <!-- Card Header -->
    <div class="card-header bg-info">Sudoku Puzzle</div>
    <div class="card-body bg-info bg-opacity-25">
        <div class="row mt-2">
            <!-- Compose Puzzle -->
            <div class="col-3">
                <div class="sudoku-grid">
                    @foreach (char number in "000000000000000000000000000000000000000000000000000000000000000000000000000000000")
                    {
                        <div class="cell" name="sudokuNumberPosition">@number</div>
                    }
                </div>
            </div>
            <div class="col-9">
                <!-- Select Sudoku -->
                <div class="row">
                    <div class="col">
                        <div class="form-floating">
                            <select class="form-select" id="select-sudoku">
                                <option value="" selected disabled>... ... ...</option>
                                @foreach (var item in Model.PageData.SudokuPuzzleOptions)
                                {
                                    <option value="@item">@item</option>
                                }
                            </select>
                            <label for="select-sudoku">Select a Sudoku Puzzle</label>
                        </div>
                    </div>
                </div>
                <!-- Input -->
                <div class="row mt-2">
                    <div class="col">
                        <div class="form-floating">
                            <textarea class="form-control" required id="textarea-sudoku-puzzle" name="PageValues.Input" style="height: 100px" form="post-sudoku-puzzle">@Model.PageValues.Input</textarea>
                            <label for="textarea-sudoku-puzzle">Or fill in your own ...</label>
                        </div>
                    </div>
                </div>
                <!-- Submit -->
                <div class="row mt-2">
                    <input type="submit" class="btn btn-primary" form="post-sudoku-puzzle" value="Solve Puzzle" />
                </div>
            </div>
        </div>
    </div>
</div>


<div class="card mt-2">
    <!-- Card Header -->
    <div class="card-header bg-info">Sudoku Solution</div>
    <div class="card-body bg-info bg-opacity-25">
        <div class="row mt-2">
            <!-- Puzzle -->
            <div class="col-3">
                @if (!string.IsNullOrEmpty(Model.PageValues.SudokuPuzzle))
                {
                    <div class="sudoku-grid">
                        @foreach (char number in Model.PageValues.SudokuPuzzle)
                        {
                            <div class="cell">@number</div>
                        }
                    </div>
                }
            </div>
            <!-- Solution -->
            <div class="col-3">
                @if (!string.IsNullOrEmpty(Model.PageValues.SudokuSolution))
                {
                    <div class="sudoku-grid">
                        @foreach (char number in Model.PageValues.SudokuSolution)
                        {
                            <div class="cell">@number</div>
                        }
                    </div>
                }
            </div>
            <!-- Information Table -->
            <div class="col-6">
                <table class="table table-striped table-info table-hover">
                    <tbody>
                        <tr><td class="fw-bold">Input</td><td class="text-break">@Model.PageData.SudokuResponse.SudokuRequest.Input</td></tr>
                        <tr><td class="fw-bold">Puzzle</td><td class="text-break">@Model.PageData.SudokuResponse.SudokuRequest.Puzzle.ConvertToString()</td></tr>
                        @if (Model.PageData.SudokuResponse.Solutions.Any())
                        {
                            <tr><td class="fw-bold">Solution</td><td class="text-break">@Model.PageData.SudokuResponse.Solutions[0].ConvertToString()</td></tr>
                        }
                        <tr><td class="fw-bold">BeginDateTime</td><td>@Model.PageData.SudokuResponse.BeginDateTime</td></tr>
                        <tr><td class="fw-bold">EndDateTime</td><td>@Model.PageData.SudokuResponse.EndDateTime</td></tr>
                        <tr><td class="fw-bold">ElapsedMilliseconds</td><td>@Model.PageData.SudokuResponse.ElapsedMilliseconds</td></tr>
                        <tr><td class="fw-bold">CalculationCycle</td><td>@Model.PageData.SudokuResponse.CalculationCycle</td></tr>
                    </tbody>
                </table>
            </div>
        </div>
    </div>
</div>

<!-- Dialog Select Number -->
<dialog id="SelectNumberDialog" class="SelectNumberDialog">
    <div class="choosenumber-grid">
        @foreach (char number in "123456789")
        {
            <div class="cell"><button type="button" name="sudokuNumberValue" value="@number">@number</button></div>
        }
    </div>
</dialog>

<script>
    class PageLibrary {
        constructor() {
            this.selectedSudokuPosition = null;
            this.composedSudokuPuzzle = null;
        }

        addListeners() {
            document.getElementById("select-sudoku").addEventListener("change", (event) => this.UseSelectedPuzzle(event));
            document.querySelectorAll('div[name="sudokuNumberPosition"]').forEach(element => element.addEventListener('click', (element) => this.SelectSudokuNumberPosition(element)));
            document.querySelectorAll('button[name="sudokuNumberValue"]').forEach(element => element.addEventListener('click', (element) => this.SelectSudokuNumberValue(element)));
        }

        UseSelectedPuzzle(element) {
            document.getElementById("textarea-sudoku-puzzle").value = element.target.value;
        }

        SelectSudokuNumberPosition(element) {
            this.selectedSudokuPosition = element;
            const container = document.getElementById("MainContainer");
            const dialog = document.getElementById("SelectNumberDialog");
            dialog.style.left = (this.selectedSudokuPosition.target.offsetLeft + container.offsetLeft) + "px";
            dialog.style.top = (this.selectedSudokuPosition.target.offsetTop + container.offsetTop) + "px";
            dialog.showModal();
        }

        SelectSudokuNumberValue(element) {
            // this.selectedSudokuPosition.target.value = element.target.value;
            this.selectedSudokuPosition.target.innerText = element.target.value;
            this.composedSudokuPuzzle = "";
            document.querySelectorAll('div[name="sudokuNumberPosition"]').forEach(number => this.composedSudokuPuzzle += number.innerText);
            document.getElementById("textarea-sudoku-puzzle").value = this.composedSudokuPuzzle;
            document.getElementById("SelectNumberDialog").close();
        }

        initPageLibrary() {
            this.addListeners();
        }
    }
    var pgl = new PageLibrary();

    pgl.initPageLibrary();
</script>